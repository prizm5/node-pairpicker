{
   "_id": "_design/stats",
   "language": "javascript",
   "views": {
       "pairs": {
           "map": "function(doc) {\n\tif((doc.doc_type == 'pairing' || doc.doc_type == 'intentional') && doc.data.length > 0){\n  \t\temit(doc._id, doc);\n\t}\n}"
       },
       "odd": {
           "map": "function(doc) {\n\tif(doc.doc_type == 'odd' && doc.data.length > 0 ){\n\t\t\n  \t\temit(doc._id, doc);\n\t}\n}"
       },
       "paircounts": {
           "map": "function(doc) {\n\tif(doc.doc_type == 'pairing' || doc.doc_type == 'intentional' || doc.doc_type == 'odd'){\n\t\tvar fixdan = function(name) { return name === 'Danny' ? 'Dan' : name };\n\t\tvar names = \"\";\n\t\tif(doc.doc_type == 'pairing' || doc.doc_type == 'intentional'   ) {\n\t  \t\tnames = fixdan(doc.data[0]) + ' :: ' + fixdan(doc.data[1]);\n\t\t\n\t\t}\n\t\tif(doc.doc_type == 'odd' ) {\n\t\t\tnames = fixdan(doc.data);\n\t\t}\nvar hideperson = names.indexOf('Arlington') < 0;\nif(hideperson){\n\t\temit(names,{\"type\": doc.doc_type, \"ts\":doc.timestamp.substring(0,10)});\n}\n\t}\n}",
           "reduce": "function (keys, values, rereduce) {\n  var hist = {};\n  if (rereduce) {\n    return values.reduce(function (acc, r) {\n      for (var k in r) {\n        if (acc[k]) {\n          acc[k].count += r[k].count;\n          if (r[k].last_ts > acc[k].last_ts) {\n            acc[k].last_ts = r[k].last_ts;\n          }\n        } else {\n          acc[k] = r[k];\n        }\n      }\n      return acc; \n    }, {});\n  }\n  else {\n    return values.reduce(function (hist, a) {\n      if (a.type in hist) {\n\tvar item = hist[a.type];\n        item.count++ ;\n        if (a.ts > item.last_ts) {\n          item.last_ts = a.ts;\n        }\n      } else {\n        hist[a.type] = { count: 1, last_ts: a.ts };\n      }\n      return hist;\n    }, {});\n  }\n}\n"
       },
       "oddcounts": {
           "map": "function(doc) {\n\tif(doc.doc_type == 'odd' ) {\n\t\temit(doc.data, doc.timestamp);\n\t}\n}",
           "reduce": "function(keys, values, rereduce){\n\tvar ts = values.reduce(function(p,c,i) {\n\t\treturn c > p ? c: p;\n\t});\n\treturn {\"odd\":{\"count\": values.length,\"last_ts\": ts}};\n}"
       },
       "intentional": {
           "map": "function(doc) {\n\tif((doc.doc_type == 'intentional') && doc.data.length > 0){\n  \t\temit(doc._id, doc);\n\t}\n}"
       },
       "teams": {
           "map": "function(doc) {\n  if(doc._id == \"team\"){\n     doc.members.forEach(function(m){\n       emit(m.team,m);\n     });\t\n  }\n    if(doc._id == \"team\"){\n     doc.members\n\t.filter(function(m){return m.foosball == 'true'})\n\t.forEach(function(m){\n       emit('Foosballerz',m);\n     });\t\n  }\n}",
           "reduce": "function(keys, values, rereduce){\n  return values.map(function(v){\n\treturn { \"name\": v.nickname || v.name, \n\t\t \"station\": v.station,\n\t\t \"original\":v.original}}).sort();\n}"
       }
   }
}